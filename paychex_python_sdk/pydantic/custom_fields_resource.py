# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from paychex_python_sdk.pydantic.custom_fields_dropdown_resource import CustomFieldsDropdownResource
from paychex_python_sdk.pydantic.link import Link

class CustomFieldsResource(BaseModel):
    # The unique identifier that is autogenerated when a custom field is created
    custom_field_id: typing.Optional[str] = Field(None, alias='customFieldId')

    # The name of the custom field
    custom_field_name: typing.Optional[str] = Field(None, alias='customFieldName')

    # The unique identifier that is autogenerated when creating a category
    category_id: typing.Optional[str] = Field(None, alias='categoryId')

    # Where to indicate if the custom field is required on the worker where true = required and false = not required
    required: typing.Optional[bool] = Field(None, alias='required')

    # Where to indicate if the custom field is required on the worker's pay stub, where true = required and false = not required
    check_stub: typing.Optional[bool] = Field(None, alias='checkStub')

    # Where to indicate if the custom field is able to be edited by the employee, where true = required and false = not required
    employee_editable: typing.Optional[bool] = Field(None, alias='employeeEditable')

    # The type of field the custom field is.
    type: typing.Optional[Literal["DROPDOWN", "TEXT", "BOOLEAN", "DATE", "NUMERIC, NUMERIC__0_00_ OR NUMERIC__0_0000_"]] = Field(None, alias='type')

    # The value for BOOLEAN type (true / false)
    boolean_value: typing.Optional[bool] = Field(None, alias='booleanValue')

    links: typing.Optional[typing.List[Link]] = Field(None, alias='links')

    # The value for DATE type , example : 2012-02-01T05:00:00Z
    date_value: typing.Optional[datetime] = Field(None, alias='dateValue')

    # The value for TEXT type (any text, alphanumeric, special characters allowed)
    text_value: typing.Optional[str] = Field(None, alias='textValue')

    # The maximum allowed value for textValue
    max_text_length: typing.Optional[typing.Union[int, float]] = Field(None, alias='maxTextLength')

    # Numeric data type can have three formats namely - whole number, second decimal place and fourth decimal place, example: 12 , 12.34 or 12.3456
    numeric_value: typing.Optional[typing.Union[int, float]] = Field(None, alias='numericValue')

    dropdown: typing.Optional[typing.List[CustomFieldsDropdownResource]] = Field(None, alias='dropdown')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
