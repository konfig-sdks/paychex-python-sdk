# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class PayComponent(BaseModel):
    cltpc_id: typing.Optional[int] = Field(None, alias='cltpcId')

    offering_id: typing.Optional[str] = Field(None, alias='offeringId')

    pc_id: typing.Optional[int] = Field(None, alias='pcId')

    custom_name: typing.Optional[str] = Field(None, alias='customName')

    report_code: typing.Optional[str] = Field(None, alias='reportCode')

    is_paychex_administered: typing.Optional[bool] = Field(None, alias='isPaychexAdministered')

    deduction_priority: typing.Optional[int] = Field(None, alias='deductionPriority')

    ref_id: typing.Optional[int] = Field(None, alias='refId')

    pay_comp_name: typing.Optional[str] = Field(None, alias='payCompName')

    pay_cpnt_type_id: typing.Optional[int] = Field(None, alias='payCpntTypeId')

    pay_cpnt_type: typing.Optional[str] = Field(None, alias='payCpntType')

    class_type_id: typing.Optional[int] = Field(None, alias='classTypeId')

    class_type: typing.Optional[str] = Field(None, alias='classType')

    pay_freq_id: typing.Optional[int] = Field(None, alias='payFreqId')

    pay_freq: typing.Optional[str] = Field(None, alias='payFreq')

    freq_type_id: typing.Optional[int] = Field(None, alias='freqTypeId')

    freq_type: typing.Optional[str] = Field(None, alias='freqType')

    first_check_rule_id: typing.Optional[int] = Field(None, alias='firstCheckRuleId')

    first_check_rule: typing.Optional[str] = Field(None, alias='firstCheckRule')

    is_bank_required: typing.Optional[bool] = Field(None, alias='isBankRequired')

    collect_arrears_on_shortfall: typing.Optional[bool] = Field(None, alias='collectArrearsOnShortfall')

    start_date: typing.Optional[datetime] = Field(None, alias='startDate')

    end_date: typing.Optional[datetime] = Field(None, alias='endDate')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
