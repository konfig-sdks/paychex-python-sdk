# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from paychex_python_sdk.pydantic.frequency_intervals_resource1 import FrequencyIntervalsResource1

class PayComponentFrequencyTypeResource1(BaseModel):
    # Currently we only support a BY_PAY_PERIOD value for the API.
    applied: typing.Optional[str] = Field(None, alias='applied')

    # This is how often the pay component will be applied on the pay run. The available values for this will depend on the payFrequency that a worker is paid which can be found on the worker compensations pay standards.
    occurrence: typing.Optional[str] = Field(None, alias='occurrence')

    occurrence_intervals: typing.Optional[FrequencyIntervalsResource1] = Field(None, alias='occurrenceIntervals')

    # Which check(s) within the payrun that the paycomponent will be applied to.FIRST_CHECK: The Pay Component will be applied to the first check for the worker within the pay run. This is used for a pay component that only should be applied once like a health insurance deduction.EVERY_CHECK: The Pay Component will be applied to all of the checks for the worker within the pay run. This is used for a pay component that is applied on all check like a retirement deduction.
    effected_checks: typing.Optional[str] = Field(None, alias='effectedChecks')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
