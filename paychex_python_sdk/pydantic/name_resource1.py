# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class NameResource1(BaseModel):
    # The family or last name of a worker.
    family_name: typing.Optional[str] = Field(None, alias='familyName')

    # A subordinate given name, or initial representing that name, of a worker. <br />NOTE:  Please send in just a single character initial for middleName.  <br />If sending in more than one character the name will be truncated the first letter of the middleName. <br /> A full middle name can be entered directly in Paychex Flex only at this time.
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # The given or first name of a worker. For an independent contractor that is a company rather than an individual, the name of the company.
    given_name: typing.Optional[str] = Field(None, alias='givenName')

    # The name that the worker prefers to go by; also known as a \"nickname\"
    preferred_name: typing.Optional[str] = Field(None, alias='preferredName')

    # A qualifier to the name of a worker, indicating generation.
    qualification_affix_code: typing.Optional[str] = Field(None, alias='qualificationAffixCode')

    # A personal title that comes before an individual's name in a formal address (such as Dr., Prof., Rev., Mr.). 
    title_affix_code: typing.Optional[str] = Field(None, alias='titleAffixCode')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
