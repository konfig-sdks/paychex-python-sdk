# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class ClientPayComponentFrequency(BaseModel):
    cf_id: typing.Optional[int] = Field(None, alias='cfId')

    frequency_option_id: typing.Optional[int] = Field(None, alias='frequencyOptionId')

    freq_type_id: typing.Optional[int] = Field(None, alias='freqTypeId')

    frequency_type: typing.Optional[str] = Field(None, alias='frequencyType')

    freq_type: typing.Optional[str] = Field(None, alias='freqType')

    pay_freq_id: typing.Optional[int] = Field(None, alias='payFreqId')

    pay_frequency: typing.Optional[str] = Field(None, alias='payFrequency')

    pay_freq: typing.Optional[str] = Field(None, alias='payFreq')

    first_period_occurrence_id: typing.Optional[int] = Field(None, alias='firstPeriodOccurrenceId')

    first_period_occurrence_type: typing.Optional[str] = Field(None, alias='firstPeriodOccurrenceType')

    first_frequency_period: typing.Optional[str] = Field(None, alias='firstFrequencyPeriod')

    first_period_occurrence: typing.Optional[str] = Field(None, alias='firstPeriodOccurrence')

    second_period_occurrence_id: typing.Optional[int] = Field(None, alias='secondPeriodOccurrenceId')

    second_period_occurrence_type: typing.Optional[str] = Field(None, alias='secondPeriodOccurrenceType')

    second_frequency_period: typing.Optional[str] = Field(None, alias='secondFrequencyPeriod')

    second_period_occurrence: typing.Optional[str] = Field(None, alias='secondPeriodOccurrence')

    interval_value: typing.Optional[int] = Field(None, alias='intervalValue')

    first_check_rule_id: typing.Optional[int] = Field(None, alias='firstCheckRuleId')

    first_check_rule_type: typing.Optional[str] = Field(None, alias='firstCheckRuleType')

    first_check_rule: typing.Optional[str] = Field(None, alias='firstCheckRule')

    first_check_only: typing.Optional[bool] = Field(None, alias='firstCheckOnly')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
