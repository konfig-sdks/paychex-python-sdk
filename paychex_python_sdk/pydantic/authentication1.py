# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Authentication1(BaseModel):
    # The authorization method used to authorize callers to your webhook url.
    auth_type: Literal["NO_AUTH", "BASIC_AUTH", "API_KEY", "OAUTH2", "OAUTH2_BASIC"] = Field(alias='authType')

    # The API key required for API_KEY authorization.
    api_key: typing.Optional[str] = Field(None, alias='apiKey')

    # The username required for BASIC_AUTH authorization.
    username: typing.Optional[str] = Field(None, alias='username')

    # The password required for BASIC_AUTH authorization.
    password: typing.Optional[str] = Field(None, alias='password')

    # The URL used to obtain an access token for OAUTH2 or OAUTH2_BASIC authorization.
    token_url: typing.Optional[str] = Field(None, alias='tokenUrl')

    # The client ID required by OAUTH2 and OAUTH2_BASIC authorization.
    client_id: typing.Optional[str] = Field(None, alias='clientId')

    # The client secret required by OAUTH2 and OAUTH2_BASIC authorization.
    client_secret: typing.Optional[str] = Field(None, alias='clientSecret')

    # The grant type used to acquire an access token by OAUTH2 and OAUTH2_BASIC authorization.
    grant_type: typing.Optional[str] = Field(None, alias='grantType')

    # The content type to use in the token request for OAUTH2 and OAUTH2_BASIC authorization.
    content_type: typing.Optional[str] = Field(None, alias='contentType')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
