# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from paychex_python_sdk.pydantic.client_account_registration import ClientAccountRegistration

class ClientAccount(BaseModel):
    external_c_a_i_d: typing.Optional[str] = Field(None, alias='externalCAID')

    external_id: typing.Optional[str] = Field(None, alias='externalId')

    lock_version: typing.Optional[int] = Field(None, alias='lockVersion')

    application_name: typing.Optional[str] = Field(None, alias='applicationName')

    assigned_name: typing.Optional[str] = Field(None, alias='assignedName')

    created_date: typing.Optional[datetime] = Field(None, alias='createdDate')

    created_by_application_name: typing.Optional[str] = Field(None, alias='createdByApplicationName')

    created_by_user_id: typing.Optional[str] = Field(None, alias='createdByUserId')

    route_attribute_name: typing.Optional[str] = Field(None, alias='routeAttributeName')

    created_by_application_sub_process_name: typing.Optional[str] = Field(None, alias='createdByApplicationSubProcessName')

    route_attribute_value: typing.Optional[str] = Field(None, alias='routeAttributeValue')

    modified_date: typing.Optional[datetime] = Field(None, alias='modifiedDate')

    modified_by_application_name: typing.Optional[str] = Field(None, alias='modifiedByApplicationName')

    modified_by_application_sub_process_name: typing.Optional[str] = Field(None, alias='modifiedByApplicationSubProcessName')

    modified_by_user_id: typing.Optional[str] = Field(None, alias='modifiedByUserId')

    parent_indicator: typing.Optional[bool] = Field(None, alias='parentIndicator')

    display_name: typing.Optional[str] = Field(None, alias='displayName')

    client_account_registrations: typing.Optional['typing.List[ClientAccountRegistration]'] = Field(None, alias='clientAccountRegistrations')

    caid: typing.Optional[str] = Field(None, alias='caid')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
