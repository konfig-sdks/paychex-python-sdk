# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from paychex_python_sdk.pydantic.organization_resource2 import OrganizationResource2

class ProcessedCheckComponentResource(BaseModel):
    component_id: typing.Optional[str] = Field(None, alias='componentId')

    check_component_id: typing.Optional[str] = Field(None, alias='checkComponentId')

    name: typing.Optional[str] = Field(None, alias='name')

    classification_type: typing.Optional[str] = Field(None, alias='classificationType')

    effect_on_pay: typing.Optional[Literal["ADDITION", "ADDITION_WITH_IN_OUT", "EMPLOYER_INFORMATIONAL", "REDUCTION"]] = Field(None, alias='effectOnPay')

    memoed: typing.Optional[bool] = Field(None, alias='memoed')

    labor_assignment_id: typing.Optional[str] = Field(None, alias='laborAssignmentId')

    organization: typing.Optional[OrganizationResource2] = Field(None, alias='organization')

    job_name: typing.Optional[str] = Field(None, alias='jobName')

    job_id: typing.Optional[str] = Field(None, alias='jobId')

    paid_by: typing.Optional[str] = Field(None, alias='paidBy')

    line_date: typing.Optional[datetime] = Field(None, alias='lineDate')

    amount: typing.Optional[str] = Field(None, alias='amount')

    rate: typing.Optional[str] = Field(None, alias='rate')

    hours: typing.Optional[str] = Field(None, alias='hours')

    units: typing.Optional[str] = Field(None, alias='units')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
