# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class CalcMethod(BaseModel):
    ccm_id: typing.Optional[int] = Field(None, alias='ccmId')

    default_type_id: typing.Optional[int] = Field(None, alias='defaultTypeId')

    default_type: typing.Optional[str] = Field(None, alias='defaultType')

    calc_type_id: typing.Optional[int] = Field(None, alias='calcTypeId')

    calculation_type: typing.Optional[str] = Field(None, alias='calculationType')

    calc_type: typing.Optional[str] = Field(None, alias='calcType')

    calc_adj_type: typing.Optional[str] = Field(None, alias='calcAdjType')

    is_include_memo_hours: typing.Optional[bool] = Field(None, alias='isIncludeMemoHours')

    is_tiered_by_pct: typing.Optional[bool] = Field(None, alias='isTieredByPct')

    is_match_calc_as_pct: typing.Optional[bool] = Field(None, alias='isMatchCalcAsPct')

    calc_adj_type_id: typing.Optional[int] = Field(None, alias='calcAdjTypeId')

    pay_rate_ovrd_type_id: typing.Optional[int] = Field(None, alias='payRateOvrdTypeId')

    pay_rate_ovrd_type: typing.Optional[str] = Field(None, alias='payRateOvrdType')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
