# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paychex_python_sdk import schemas  # noqa: F401


class PayComponentResourceAppliesToWorkerTypes(
    schemas.ListSchema
):
    """NOTE:
    This class is auto generated by Konfig (https://konfigthis.com)

    List of workerTypes that the component can be applied to.
    """


    class MetaOapg:
        
        
        class items(
            schemas.EnumBase,
            schemas.StrSchema
        ):
        
        
            class MetaOapg:
                enum_value_to_name = {
                    "EMPLOYEE": "EMPLOYEE",
                    "CONTRACTOR": "CONTRACTOR",
                    "INDEPENDENT_CONTRACTOR": "INDEPENDENT_CONTRACTOR",
                }
            
            @schemas.classproperty
            def EMPLOYEE(cls):
                return cls("EMPLOYEE")
            
            @schemas.classproperty
            def CONTRACTOR(cls):
                return cls("CONTRACTOR")
            
            @schemas.classproperty
            def INDEPENDENT_CONTRACTOR(cls):
                return cls("INDEPENDENT_CONTRACTOR")

    def __new__(
        cls,
        arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'PayComponentResourceAppliesToWorkerTypes':
        return super().__new__(
            cls,
            arg,
            _configuration=_configuration,
        )

    def __getitem__(self, i: int) -> MetaOapg.items:
        return super().__getitem__(i)
