# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paychex_python_sdk import schemas  # noqa: F401


class WebhookRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    This resource is for registering/unregistering webhooks.
    """


    class MetaOapg:
        required = {
            "domains",
            "uri",
            "authentication",
        }
        
        class properties:
            uri = schemas.StrSchema
        
            @staticmethod
            def authentication() -> typing.Type['Authentication1']:
                return Authentication1
        
            @staticmethod
            def domains() -> typing.Type['WebhookRequestDomains']:
                return WebhookRequestDomains
            hookId = schemas.StrSchema
            companyId = schemas.StrSchema
            
            
            class links(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['Link']:
                        return Link
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['Link'], typing.List['Link']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'links':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'Link':
                    return super().__getitem__(i)
            __annotations__ = {
                "uri": uri,
                "authentication": authentication,
                "domains": domains,
                "hookId": hookId,
                "companyId": companyId,
                "links": links,
            }
    
    domains: 'WebhookRequestDomains'
    uri: MetaOapg.properties.uri
    authentication: 'Authentication1'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["uri"]) -> MetaOapg.properties.uri: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authentication"]) -> 'Authentication1': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domains"]) -> 'WebhookRequestDomains': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hookId"]) -> MetaOapg.properties.hookId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyId"]) -> MetaOapg.properties.companyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["links"]) -> MetaOapg.properties.links: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["uri", "authentication", "domains", "hookId", "companyId", "links", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["uri"]) -> MetaOapg.properties.uri: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authentication"]) -> 'Authentication1': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domains"]) -> 'WebhookRequestDomains': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hookId"]) -> typing.Union[MetaOapg.properties.hookId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyId"]) -> typing.Union[MetaOapg.properties.companyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["links"]) -> typing.Union[MetaOapg.properties.links, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["uri", "authentication", "domains", "hookId", "companyId", "links", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        domains: 'WebhookRequestDomains',
        uri: typing.Union[MetaOapg.properties.uri, str, ],
        authentication: 'Authentication1',
        hookId: typing.Union[MetaOapg.properties.hookId, str, schemas.Unset] = schemas.unset,
        companyId: typing.Union[MetaOapg.properties.companyId, str, schemas.Unset] = schemas.unset,
        links: typing.Union[MetaOapg.properties.links, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WebhookRequest':
        return super().__new__(
            cls,
            *args,
            domains=domains,
            uri=uri,
            authentication=authentication,
            hookId=hookId,
            companyId=companyId,
            links=links,
            _configuration=_configuration,
            **kwargs,
        )

from paychex_python_sdk.model.authentication1 import Authentication1
from paychex_python_sdk.model.link import Link
from paychex_python_sdk.model.webhook_request_domains import WebhookRequestDomains
