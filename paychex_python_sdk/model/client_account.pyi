# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paychex_python_sdk import schemas  # noqa: F401


class ClientAccount(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            externalCAID = schemas.StrSchema
            externalId = schemas.StrSchema
            lockVersion = schemas.Int32Schema
            applicationName = schemas.StrSchema
            assignedName = schemas.StrSchema
            createdDate = schemas.DateTimeSchema
            createdByApplicationName = schemas.StrSchema
            createdByUserId = schemas.StrSchema
            routeAttributeName = schemas.StrSchema
            createdByApplicationSubProcessName = schemas.StrSchema
            routeAttributeValue = schemas.StrSchema
            modifiedDate = schemas.DateTimeSchema
            modifiedByApplicationName = schemas.StrSchema
            modifiedByApplicationSubProcessName = schemas.StrSchema
            modifiedByUserId = schemas.StrSchema
            parentIndicator = schemas.BoolSchema
            displayName = schemas.StrSchema
            
            
            class clientAccountRegistrations(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ClientAccountRegistration']:
                        return ClientAccountRegistration
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ClientAccountRegistration'], typing.List['ClientAccountRegistration']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'clientAccountRegistrations':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ClientAccountRegistration':
                    return super().__getitem__(i)
            caid = schemas.StrSchema
            __annotations__ = {
                "externalCAID": externalCAID,
                "externalId": externalId,
                "lockVersion": lockVersion,
                "applicationName": applicationName,
                "assignedName": assignedName,
                "createdDate": createdDate,
                "createdByApplicationName": createdByApplicationName,
                "createdByUserId": createdByUserId,
                "routeAttributeName": routeAttributeName,
                "createdByApplicationSubProcessName": createdByApplicationSubProcessName,
                "routeAttributeValue": routeAttributeValue,
                "modifiedDate": modifiedDate,
                "modifiedByApplicationName": modifiedByApplicationName,
                "modifiedByApplicationSubProcessName": modifiedByApplicationSubProcessName,
                "modifiedByUserId": modifiedByUserId,
                "parentIndicator": parentIndicator,
                "displayName": displayName,
                "clientAccountRegistrations": clientAccountRegistrations,
                "caid": caid,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["externalCAID"]) -> MetaOapg.properties.externalCAID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["externalId"]) -> MetaOapg.properties.externalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lockVersion"]) -> MetaOapg.properties.lockVersion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["applicationName"]) -> MetaOapg.properties.applicationName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["assignedName"]) -> MetaOapg.properties.assignedName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdDate"]) -> MetaOapg.properties.createdDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdByApplicationName"]) -> MetaOapg.properties.createdByApplicationName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdByUserId"]) -> MetaOapg.properties.createdByUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["routeAttributeName"]) -> MetaOapg.properties.routeAttributeName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdByApplicationSubProcessName"]) -> MetaOapg.properties.createdByApplicationSubProcessName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["routeAttributeValue"]) -> MetaOapg.properties.routeAttributeValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modifiedDate"]) -> MetaOapg.properties.modifiedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modifiedByApplicationName"]) -> MetaOapg.properties.modifiedByApplicationName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modifiedByApplicationSubProcessName"]) -> MetaOapg.properties.modifiedByApplicationSubProcessName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modifiedByUserId"]) -> MetaOapg.properties.modifiedByUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parentIndicator"]) -> MetaOapg.properties.parentIndicator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clientAccountRegistrations"]) -> MetaOapg.properties.clientAccountRegistrations: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["caid"]) -> MetaOapg.properties.caid: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["externalCAID", "externalId", "lockVersion", "applicationName", "assignedName", "createdDate", "createdByApplicationName", "createdByUserId", "routeAttributeName", "createdByApplicationSubProcessName", "routeAttributeValue", "modifiedDate", "modifiedByApplicationName", "modifiedByApplicationSubProcessName", "modifiedByUserId", "parentIndicator", "displayName", "clientAccountRegistrations", "caid", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["externalCAID"]) -> typing.Union[MetaOapg.properties.externalCAID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["externalId"]) -> typing.Union[MetaOapg.properties.externalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lockVersion"]) -> typing.Union[MetaOapg.properties.lockVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["applicationName"]) -> typing.Union[MetaOapg.properties.applicationName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["assignedName"]) -> typing.Union[MetaOapg.properties.assignedName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdDate"]) -> typing.Union[MetaOapg.properties.createdDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdByApplicationName"]) -> typing.Union[MetaOapg.properties.createdByApplicationName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdByUserId"]) -> typing.Union[MetaOapg.properties.createdByUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["routeAttributeName"]) -> typing.Union[MetaOapg.properties.routeAttributeName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdByApplicationSubProcessName"]) -> typing.Union[MetaOapg.properties.createdByApplicationSubProcessName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["routeAttributeValue"]) -> typing.Union[MetaOapg.properties.routeAttributeValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modifiedDate"]) -> typing.Union[MetaOapg.properties.modifiedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modifiedByApplicationName"]) -> typing.Union[MetaOapg.properties.modifiedByApplicationName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modifiedByApplicationSubProcessName"]) -> typing.Union[MetaOapg.properties.modifiedByApplicationSubProcessName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modifiedByUserId"]) -> typing.Union[MetaOapg.properties.modifiedByUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parentIndicator"]) -> typing.Union[MetaOapg.properties.parentIndicator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clientAccountRegistrations"]) -> typing.Union[MetaOapg.properties.clientAccountRegistrations, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["caid"]) -> typing.Union[MetaOapg.properties.caid, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["externalCAID", "externalId", "lockVersion", "applicationName", "assignedName", "createdDate", "createdByApplicationName", "createdByUserId", "routeAttributeName", "createdByApplicationSubProcessName", "routeAttributeValue", "modifiedDate", "modifiedByApplicationName", "modifiedByApplicationSubProcessName", "modifiedByUserId", "parentIndicator", "displayName", "clientAccountRegistrations", "caid", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        externalCAID: typing.Union[MetaOapg.properties.externalCAID, str, schemas.Unset] = schemas.unset,
        externalId: typing.Union[MetaOapg.properties.externalId, str, schemas.Unset] = schemas.unset,
        lockVersion: typing.Union[MetaOapg.properties.lockVersion, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        applicationName: typing.Union[MetaOapg.properties.applicationName, str, schemas.Unset] = schemas.unset,
        assignedName: typing.Union[MetaOapg.properties.assignedName, str, schemas.Unset] = schemas.unset,
        createdDate: typing.Union[MetaOapg.properties.createdDate, str, datetime, schemas.Unset] = schemas.unset,
        createdByApplicationName: typing.Union[MetaOapg.properties.createdByApplicationName, str, schemas.Unset] = schemas.unset,
        createdByUserId: typing.Union[MetaOapg.properties.createdByUserId, str, schemas.Unset] = schemas.unset,
        routeAttributeName: typing.Union[MetaOapg.properties.routeAttributeName, str, schemas.Unset] = schemas.unset,
        createdByApplicationSubProcessName: typing.Union[MetaOapg.properties.createdByApplicationSubProcessName, str, schemas.Unset] = schemas.unset,
        routeAttributeValue: typing.Union[MetaOapg.properties.routeAttributeValue, str, schemas.Unset] = schemas.unset,
        modifiedDate: typing.Union[MetaOapg.properties.modifiedDate, str, datetime, schemas.Unset] = schemas.unset,
        modifiedByApplicationName: typing.Union[MetaOapg.properties.modifiedByApplicationName, str, schemas.Unset] = schemas.unset,
        modifiedByApplicationSubProcessName: typing.Union[MetaOapg.properties.modifiedByApplicationSubProcessName, str, schemas.Unset] = schemas.unset,
        modifiedByUserId: typing.Union[MetaOapg.properties.modifiedByUserId, str, schemas.Unset] = schemas.unset,
        parentIndicator: typing.Union[MetaOapg.properties.parentIndicator, bool, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
        clientAccountRegistrations: typing.Union[MetaOapg.properties.clientAccountRegistrations, list, tuple, schemas.Unset] = schemas.unset,
        caid: typing.Union[MetaOapg.properties.caid, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ClientAccount':
        return super().__new__(
            cls,
            *args,
            externalCAID=externalCAID,
            externalId=externalId,
            lockVersion=lockVersion,
            applicationName=applicationName,
            assignedName=assignedName,
            createdDate=createdDate,
            createdByApplicationName=createdByApplicationName,
            createdByUserId=createdByUserId,
            routeAttributeName=routeAttributeName,
            createdByApplicationSubProcessName=createdByApplicationSubProcessName,
            routeAttributeValue=routeAttributeValue,
            modifiedDate=modifiedDate,
            modifiedByApplicationName=modifiedByApplicationName,
            modifiedByApplicationSubProcessName=modifiedByApplicationSubProcessName,
            modifiedByUserId=modifiedByUserId,
            parentIndicator=parentIndicator,
            displayName=displayName,
            clientAccountRegistrations=clientAccountRegistrations,
            caid=caid,
            _configuration=_configuration,
            **kwargs,
        )

from paychex_python_sdk.model.client_account_registration import ClientAccountRegistration
