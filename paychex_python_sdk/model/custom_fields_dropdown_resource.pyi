# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from paychex_python_sdk import schemas  # noqa: F401


class CustomFieldsDropdownResource(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            dropdownId = schemas.StrSchema
            dropdownValue = schemas.StrSchema
            dropdownDefault = schemas.BoolSchema
            __annotations__ = {
                "dropdownId": dropdownId,
                "dropdownValue": dropdownValue,
                "dropdownDefault": dropdownDefault,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dropdownId"]) -> MetaOapg.properties.dropdownId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dropdownValue"]) -> MetaOapg.properties.dropdownValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dropdownDefault"]) -> MetaOapg.properties.dropdownDefault: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["dropdownId", "dropdownValue", "dropdownDefault", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dropdownId"]) -> typing.Union[MetaOapg.properties.dropdownId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dropdownValue"]) -> typing.Union[MetaOapg.properties.dropdownValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dropdownDefault"]) -> typing.Union[MetaOapg.properties.dropdownDefault, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["dropdownId", "dropdownValue", "dropdownDefault", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        dropdownId: typing.Union[MetaOapg.properties.dropdownId, str, schemas.Unset] = schemas.unset,
        dropdownValue: typing.Union[MetaOapg.properties.dropdownValue, str, schemas.Unset] = schemas.unset,
        dropdownDefault: typing.Union[MetaOapg.properties.dropdownDefault, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CustomFieldsDropdownResource':
        return super().__new__(
            cls,
            *args,
            dropdownId=dropdownId,
            dropdownValue=dropdownValue,
            dropdownDefault=dropdownDefault,
            _configuration=_configuration,
            **kwargs,
        )
