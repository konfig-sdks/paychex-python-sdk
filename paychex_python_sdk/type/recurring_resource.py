# coding: utf-8

"""
    External API

      # Developer Resources  Refer [Developer Resources](https://developer.paychex.com/resources/overview/) for more details on API specification 

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from paychex_python_sdk.type.link import Link
from paychex_python_sdk.type.pay_component_frequency_type_resource1 import PayComponentFrequencyTypeResource1

class RequiredRecurringResource(TypedDict):
    pass

class OptionalRecurringResource(TypedDict, total=False):
    # The id of a single pay component that a workers has.
    workerComponentId: str

    # The unique identifier of the pay component. This data field cannot be PATCHED.
    componentId: str

    # Name of the pay component. This data field will be populated automatically based on componentId.
    name: str

    # The type of calculation that will be applied for the pay component .
    calculationType: str

    # This is required if you are not using a FLAT_DOLLAR_AMOUNT Calculation Type.
    calculationBaseId: str

    # This is used to specify the value that is used against the calculationType.
    value: typing.Union[int, float]

    # Date which this pay component will start to be applied during the payruns. This is an optional field that default to current datetime if not provided. This cannot be backdated but can be added to start in the future.
    startDate: datetime

    # Date which this pay component has started for the worker.
    effectiveDate: datetime

    # Date which this pay component has ended for the worker.
    endDate: datetime

    # What the effect on pay will be (REDUCTION OR ADDITION), currently only reductions are available. This data field will be populated automatically based on componentId. This data field cannot be PATCHED
    effectOnPay: str

    # The category that this component falls into.
    classificationType: str

    frequency: PayComponentFrequencyTypeResource1

    links: typing.List[Link]

class RecurringResource(RequiredRecurringResource, OptionalRecurringResource):
    pass
